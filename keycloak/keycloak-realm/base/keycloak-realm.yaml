apiVersion: k8s.keycloak.org/v2alpha1
kind: KeycloakRealmImport
metadata:
  name: mycluster
  namespace: keycloak
spec:
  keycloakCRName: keycloak
  placeholders:
    CLUSTER_DOMAIN:
      secret:
        name: keycloak-realm-env-secret
        key: CLUSTER_DOMAIN
    PROXY_OAUTH_CLIENT_ID:
      secret:
        name: keycloak-realm-env-secret
        key: PROXY_OAUTH_CLIENT_ID
    PROXY_OAUTH_CLIENT_SECRET:
      secret:
        name: keycloak-realm-env-secret
        key: PROXY_OAUTH_CLIENT_SECRET
    GRAFANA_OAUTH_CLIENT_ID:
      secret:
        name: keycloak-realm-env-secret
        key: GRAFANA_OAUTH_CLIENT_ID
    GRAFANA_OAUTH_CLIENT_SECRET:
      secret:
        name: keycloak-realm-env-secret
        key: GRAFANA_OAUTH_CLIENT_SECRET
    PI_ADMIN_USERNAME:
      secret:
        name: keycloak-realm-env-secret
        key: PI_ADMIN_USERNAME
    PI_ADMIN_PASSWORD:
      secret:
        name: keycloak-realm-env-secret
        key: PI_ADMIN_PASSWORD
    PI_ADMIN_FIRSTNAME:
      secret:
        name: keycloak-realm-env-secret
        key: PI_ADMIN_FIRSTNAME
    PI_ADMIN_LASTNAME:
      secret:
        name: keycloak-realm-env-secret
        key: PI_ADMIN_LASTNAME
  realm:
    realm: mycluster
    accessTokenLifespan: 6000
    enabled: true
    loginTheme: lokahi
    emailTheme: lokahi
    rememberMe: true
    resetPasswordAllowed: true
    clients:
      - clientId: ${PROXY_OAUTH_CLIENT_ID}
        name: Proxy OAuth 2.0
        description: Proxy OAuth 2.0
        surrogateAuthRequired: false
        enabled: true
        clientAuthenticatorType: client-secret
        secret: ${PROXY_OAUTH_CLIENT_SECRET}
        redirectUris:
          - https://oauth2-proxy.${CLUSTER_DOMAIN}/oauth2/callback
        webOrigins:
          - https://oauth2-proxy.${CLUSTER_DOMAIN}
        standardFlowEnabled: true
        directAccessGrantsEnabled: false
        protocol: openid-connect
        protocolMappers:
          - name: aud-mapper-proxy-oauth2
            protocol: openid-connect
            protocolMapper: oidc-audience-mapper
            consentRequired: false
            config:
              included.client.audience: ${PROXY_OAUTH_CLIENT_ID}
              id.token.claim: 'true'
              access.token.claim: 'true'
        defaultClientScopes:
          - web-origins
          - acr
          - roles
          - profile
          - email
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
        access:
          view: true
          configure: true
          manage: true
      - clientId: ${GRAFANA_OAUTH_CLIENT_ID}
        name: Grafana
        description: Grafana
        rootUrl: https://monitoring.${CLUSTER_DOMAIN}/grafana
        adminUrl: https://monitoring.${CLUSTER_DOMAIN}/grafana
        baseUrl: https://monitoring.${CLUSTER_DOMAIN}/grafana
        surrogateAuthRequired: false
        enabled: true
        alwaysDisplayInConsole: true
        clientAuthenticatorType: client-secret
        secret: ${GRAFANA_OAUTH_CLIENT_SECRET}
        redirectUris:
          - https://monitoring.${CLUSTER_DOMAIN}/grafana/login/generic_oauth
        webOrigins:
          - https://monitoring.${CLUSTER_DOMAIN}/grafana
        standardFlowEnabled: true
        implicitFlowEnabled: false
        directAccessGrantsEnabled: true
        serviceAccountsEnabled: false
        publicClient: false
        protocol: openid-connect
        fullScopeAllowed: true
        frontchannelLogout: true
        defaultClientScopes:
          - web-origins
          - acr
          - profile
          - roles
          - roles_id_token
          - email
        optionalClientScopes:
          - address
          - phone
          - offline_access
          - microprofile-jwt
        access:
          view: true
          configure: true
          manage: true
    roles:
      client:
        grafana:
          - name: admin
            description: ''
            composite: false
            clientRole: true
            attributes: {}
          - name: editor
            description: ''
            composite: false
            clientRole: true
            attributes: {}
          - name: viewer
            description: ''
            composite: false
            clientRole: true
            attributes: {}
    groups:
      - name: admin
        path: /admin
        subGroups: []
        attributes: {}
        realmRoles: []
        clientRoles:
          grafana:
            - admin
    users:
      - username: ${PI_ADMIN_USERNAME}
        firstName: ${PI_ADMIN_FIRSTNAME}
        lastName: ${PI_ADMIN_LASTNAME}
        email: admin@${CLUSTER_DOMAIN}
        enabled: true
        emailVerified: true
        credentials:
          - type: password
            value: ${PI_ADMIN_PASSWORD}
        realmRoles:
          - default-roles-mycluster
        groups:
          - admin
